version: '3.7'
networks:
  network:
    driver: bridge
services:
  desafio-cartas-api:
    build:
      context: ./desafio-cartas
      dockerfile: docker/Dockerfile
    container_name: desafio-cartas-api
    hostname: desafio-cartas-api
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://postgresql:5432/desafio_cartas'
      DB_DRIVER_CLASS: org.postgresql.Driver
      SPRING_DATASOURCE_USERNAME: api-user
      SPRING_DATASOURCE_PASSWORD: topsecret
      CORS_ORIGIN: '*'
      CORS_WEBSOCKET_ALLOWED_HOST: '*'
      CORS_METHODS: 'GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD'
      CORS_ALLOW_HEADERS: 'Authorization,Content-Type,X-Authorization,authorization,content-type,x-authorization'
      CORS_ALLOW_CREDENTIALS: 'true'
      SERVICE_NAME: desafio-cartas-api
      TZ: America/Sao_Paulo
    working_dir: /app
    networks:
      - network
    depends_on:
      - postgresql
    ports:
      - '8080:8080'
    restart: always
  postgresql:
    image: 'postgres:13-alpine'
    container_name: postgresql
    hostname: postgresql
    environment:
      POSTGRES_USER: api-user
      POSTGRES_PASSWORD: topsecret
      POSTGRES_DB: desafio_cartas
    ports:
      - '5432:5432'
    networks:
      - network
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    command: postgres
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U api-user -d desafio_cartas
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
volumes:
  postgres-data: null
